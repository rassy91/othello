!function(){const t=function(t){this.ctx=t,this.GRID_SIZE=50,this.LINE_NUMBER=9,this.R=.3*this.GRID_SIZE,this.stonePoses=[],this.init()};t.prototype={init:function(){this.ctx.translate(1,1),this.drawBoard()},drawBoard:function(){const t=this,o=t.GRID_SIZE*(t.LINE_NUMBER-1);let n=0,i=0;t.drawRect(n,i,o,o,"#008833");for(let e=1;e<=t.LINE_NUMBER;e++)t.drawLine(n,0,n,o),n+=t.GRID_SIZE;for(let e=1;e<=t.LINE_NUMBER;e++)t.drawLine(0,i,o,i),i+=t.GRID_SIZE},drawRect:function(t,o,n,i,e){this.ctx.fillStyle=void 0!==e?e:"#000000",this.ctx.fillRect(t,o,n,i)},drawLine:function(t,o,n,i,e,s){this.ctx.strokeStyle=void 0!==e?e:"#000000",this.ctx.lineWidth=void 0!==s?s:1,this.ctx.beginPath(),this.ctx.moveTo(t,o),this.ctx.lineTo(n,i),this.ctx.closePath(),this.ctx.stroke()},startGame:function(){const t=this,o=t.GRID_SIZE*((t.LINE_NUMBER-1)/2),n=t.GRID_SIZE/2;let i,e,s=-1,c=-1,h={r:t.R};function l(l){for(let r=0;r<2;r++){i=o+s*n,e=o+c*n,h.x=i,h.y=e,h.color=l;let r=new window.myOthello.Stone(t.ctx,h);r.drawArc(h),t.stonePoses.push({instance:r,pos:[Math.floor(i/t.GRID_SIZE),Math.floor(e/t.GRID_SIZE)]}),s*=-1,c*=-1}}l("#ffffff"),s*=-1,l("#000000")},getPosOnBoard:function(t,o){return[Math.floor(t/this.GRID_SIZE),Math.floor(o/this.GRID_SIZE)]},putStone:function(t,o,n){let i=Math.floor(t/this.GRID_SIZE),e=Math.floor(o/this.GRID_SIZE);if(this.checkVacancy([i,e])>0)return;let s={x:this.GRID_SIZE*i+this.GRID_SIZE/2,y:this.GRID_SIZE*e+this.GRID_SIZE/2,r:this.R,color:n},c=new window.myOthello.Stone(this.ctx,s);c.drawArc(s),this.stonePoses.push({instance:c,pos:[i,e]})},checkVacancy:function(t){return this.stonePoses.filter(function(o){return o.pos[0]===t[0]&&o.pos[1]===t[1]}).length}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.BoardManager=t}(),function(){const t=function(t,o){this.canvas=t,this.color=o.color,this.stones=[],this.init()};t.prototype={init:function(){this.setEvent()},setEvent:function(){},getClickPos:function(){}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.Player=t}(),function(){const t=function(t,o){this.ctx=t,this.color=o.color};t.prototype={drawArc:function(t){this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.r,0,2*Math.PI,!0),this.ctx.fillStyle=t.color,this.ctx.fill(),this.ctx.closePath()}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.Stone=t}(),document.addEventListener("DOMContentLoaded",function(){const t=document.getElementById("canvas");if(!t.getContext)return;const o=document.getElementById("wrapper"),n=t.getContext("2d");n.canvas.width=o.clientWidth,n.canvas.height=o.clientHeight;let i="#ffffff",e=1;const s=new myOthello.BoardManager(n);s.startGame(),t.addEventListener("click",function(t){i=(e*=-1)>0?"#ffffff":"#000000",s.putStone(t.offsetX,t.offsetY,i)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,