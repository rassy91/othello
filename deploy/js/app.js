!function(){const t=function(t){this.ctx=t,this.cautionText=document.getElementById("caution"),this.stoneColorText=document.getElementById("stoneColor"),this.GRID_SIZE=50,this.LINE_NUMBER=9,this.R=.3*this.GRID_SIZE,this.isWhite=1,this.board=[],this.turnStones=[],this.toggleCautionClassName="isVisible",this.toggleTextClassName="js-isWhite",this.init()};t.prototype={init:function(){const t=this;t.ctx.translate(1,1),t.drawBoard();for(let e=1;e<t.LINE_NUMBER;e++){let e=[];for(let o=1;o<t.LINE_NUMBER;o++)e.push({});t.board.push(e)}},drawBoard:function(){const t=this,e=t.GRID_SIZE*(t.LINE_NUMBER-1);let o=0,i=0;t.drawRect(o,i,e,e,"#008833");for(let n=1;n<=t.LINE_NUMBER;n++)t.drawLine(o,0,o,e),o+=t.GRID_SIZE;for(let n=1;n<=t.LINE_NUMBER;n++)t.drawLine(0,i,e,i),i+=t.GRID_SIZE},drawRect:function(t,e,o,i,n){this.ctx.fillStyle=void 0!==n?n:"#000000",this.ctx.fillRect(t,e,o,i)},drawLine:function(t,e,o,i,n,s){this.ctx.strokeStyle=void 0!==n?n:"#000000",this.ctx.lineWidth=void 0!==s?s:1,this.ctx.beginPath(),this.ctx.moveTo(t,e),this.ctx.lineTo(o,i),this.ctx.closePath(),this.ctx.stroke()},startGame:function(){const t=this,e=t.GRID_SIZE*((t.LINE_NUMBER-1)/2),o=t.GRID_SIZE/2;let i,n,s=-1,l=-1,c=1;function h(){for(let h=0;h<2;h++){let h={r:t.R};i=e+s*o,n=e+l*o,h.x=i,h.y=n,h.isWhite=c;let a=new window.myOthello.Stone(t.ctx,h);a.drawArc(h);let r=t.board[Math.floor(n/t.GRID_SIZE)][Math.floor(i/t.GRID_SIZE)];r.instance=a,r.isWhite=c,s*=-1,l*=-1}}h(),s*=-1,c*=-1,h(),console.log(t.board)},showCaution:function(){const t=this;t.cautionText.classList.contains(t.toggleCautionClassName)||(t.cautionText.classList.add(t.toggleCautionClassName),setTimeout(function(){t.cautionText.classList.remove(t.toggleCautionClassName)},1e3))},putStone:function(t,e){const o=this;let i=Math.floor(t/o.GRID_SIZE),n=Math.floor(e/o.GRID_SIZE);if(!o.checkVacancy(i,n))return void o.showCaution();if(!o.checkNeighbor(i,n))return void o.showCaution();if(!o.checkIfPossible(i,n))return void o.showCaution();o.isWhite*=-1;let s={x:o.GRID_SIZE*i+o.GRID_SIZE/2,y:o.GRID_SIZE*n+o.GRID_SIZE/2,r:o.R,isWhite:o.isWhite},l=new window.myOthello.Stone(o.ctx,s);l.drawArc(s);let c=o.board[n][i];c.instance=l,c.isWhite=o.isWhite,c.x=i,c.y=n,o.turnStones.length>0&&(o.turnStones.forEach(function(t){t.isWhite*=-1,t.instance.reverse()}),o.turnStones.length=0),o.stoneColorText.classList.contains(o.toggleTextClassName)?(o.stoneColorText.textContent="黒",o.stoneColorText.classList.remove(o.toggleTextClassName)):(o.stoneColorText.textContent="白",o.stoneColorText.classList.add(o.toggleTextClassName))},checkVacancy:function(t,e){return Object.keys(this.board[e][t]).length<=0},checkNeighbor:function(t,e){const o=this;let i,n,s=[[t,e-1],[t+1,e-1],[t+1,e],[t+1,e+1],[t,e+1],[t-1,e+1],[t-1,e],[t-1,e-1]];for(let l=0,c=s.length;l<c;l++)if(i=s[l][0],n=s[l][1],!(i<0||i>7||n<0||n>7)&&Object.keys(o.board[n][i]).length>0)return!0},checkIfPossible:function(t,e){const o=this,i=o.LINE_NUMBER-1-1;let n,s,l,c=!1,h=null,a=null,r=[],d=[[-1,0],[1,0],[0,-1],[0,1],[-1,-1],[1,1],[1,-1],[-1,1]];return function(){for(let f=0,u=d.length;f<u;f++){n=!1,s=d[f][0],l=d[f][1];for(let d=1;!(!(d<=i)||s<0&&e+s*d<0||s>0&&e+s*d>i||l<0&&t+l*d<0||l>0&&t+l*d>i);d++)if(h=o.board[e+s*d][t+l*d],Object.keys(h).length>0&&-1*h.isWhite===o.isWhite){for(let i=1;i<d;i++){if((a=o.board[e+s*i][t+l*i]).y=e+s*i,a.x=t+l*i,!(Object.keys(a).length>0&&a.isWhite===o.isWhite)){n=!1,r.length=0,delete a.x,delete a.y;break}n=!0,r.push(a)}if(n){for(let t=0,e=r.length;t<e;t++)o.turnStones.push(r[t]);r.length=0,c=!0;break}}}}(),c}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.BoardManager=t}(),function(){const t=function(t,e){this.ctx=t,this.data=e,this.isWhite=e.isWhite};t.prototype={drawArc:function(t){this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.r,0,2*Math.PI,!0),this.ctx.fillStyle=this.isWhite>0?"#ffffff":"#000000",this.ctx.fill(),this.ctx.closePath()},reverse:function(){this.isWhite*=-1,this.drawArc(this.data)}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.Stone=t}(),document.addEventListener("DOMContentLoaded",function(){const t=document.getElementById("canvas");if(!t.getContext)return;const e=t.getContext("2d"),o=document.getElementById("canvasWrapper");e.canvas.width=o.clientWidth,e.canvas.height=o.clientHeight;const i=new myOthello.BoardManager(e);i.startGame(),t.addEventListener("click",function(t){i.putStone(t.offsetX,t.offsetY)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,