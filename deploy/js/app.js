!function(){const t=function(t){this.ctx=t,this.GRID_SIZE=50,this.LINE_NUMBER=9,this.R=.3*this.GRID_SIZE,this.color="#ffffff",this.isWhite=1,this.stonePoses=[],this.init()};t.prototype={init:function(){this.ctx.translate(1,1),this.drawBoard()},drawBoard:function(){const t=this,o=t.GRID_SIZE*(t.LINE_NUMBER-1);let i=0,n=0;t.drawRect(i,n,o,o,"#008833");for(let e=1;e<=t.LINE_NUMBER;e++)t.drawLine(i,0,i,o),i+=t.GRID_SIZE;for(let e=1;e<=t.LINE_NUMBER;e++)t.drawLine(0,n,o,n),n+=t.GRID_SIZE},drawRect:function(t,o,i,n,e){this.ctx.fillStyle=void 0!==e?e:"#000000",this.ctx.fillRect(t,o,i,n)},drawLine:function(t,o,i,n,e,s){this.ctx.strokeStyle=void 0!==e?e:"#000000",this.ctx.lineWidth=void 0!==s?s:1,this.ctx.beginPath(),this.ctx.moveTo(t,o),this.ctx.lineTo(i,n),this.ctx.closePath(),this.ctx.stroke()},startGame:function(){const t=this,o=t.GRID_SIZE*((t.LINE_NUMBER-1)/2),i=t.GRID_SIZE/2;let n,e,s=-1,c=-1,h={r:t.R};function l(l){for(let r=0;r<2;r++){n=o+s*i,e=o+c*i,h.x=n,h.y=e,h.color=l;let r=new window.myOthello.Stone(t.ctx,h);r.drawArc(h),t.stonePoses.push({instance:r,pos:[Math.floor(n/t.GRID_SIZE),Math.floor(e/t.GRID_SIZE)]}),s*=-1,c*=-1}}l("#ffffff"),s*=-1,l("#000000")},getPosOnBoard:function(t,o){return[Math.floor(t/this.GRID_SIZE),Math.floor(o/this.GRID_SIZE)]},putStone:function(t,o){let i=Math.floor(t/this.GRID_SIZE),n=Math.floor(o/this.GRID_SIZE);if(this.checkVacancy(i,n)>0)return;if(!this.checkNeighbor(i,n))return;this.isWhite*=-1,color=this.isWhite>0?"#ffffff":"#000000";let e={x:this.GRID_SIZE*i+this.GRID_SIZE/2,y:this.GRID_SIZE*n+this.GRID_SIZE/2,r:this.R,color:color},s=new window.myOthello.Stone(this.ctx,e);s.drawArc(e),this.stonePoses.push({instance:s,pos:[i,n]})},checkVacancy:function(t,o){return this.stonePoses.filter(function(i){return i.pos[0]===t&&i.pos[1]===o}).length},checkNeighbor:function(t,o){const i=this;let n=!1,e=[[t-1,o],[t-1,o+1],[t,o+1],[t+1,o+1],[t+1,o],[t+1,o-1],[t,o-1],[t-1,o-1]];for(let s=0,c=i.stonePoses.length;s<c;s++){for(let t=0,o=e.length;t<o;t++)if(i.stonePoses[s].pos[0]===e[t][0]&&i.stonePoses[s].pos[1]===e[t][1]){n=!0;break}if(n)break}return n}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.BoardManager=t}(),function(){const t=function(t,o){this.canvas=t,this.color=o.color,this.stones=[],this.init()};t.prototype={init:function(){this.setEvent()},setEvent:function(){},getClickPos:function(){}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.Player=t}(),function(){const t=function(t,o){this.ctx=t,this.color=o.color};t.prototype={drawArc:function(t){this.ctx.beginPath(),this.ctx.arc(t.x,t.y,t.r,0,2*Math.PI,!0),this.ctx.fillStyle=t.color,this.ctx.fill(),this.ctx.closePath()}},void 0===window.myOthello&&(window.myOthello={}),window.myOthello.Stone=t}(),document.addEventListener("DOMContentLoaded",function(){const t=document.getElementById("canvas");if(!t.getContext)return;const o=document.getElementById("wrapper"),i=t.getContext("2d");i.canvas.width=o.clientWidth,i.canvas.height=o.clientHeight;const n=new myOthello.BoardManager(i);n.startGame(),t.addEventListener("click",function(t){n.putStone(t.offsetX,t.offsetY)})});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,